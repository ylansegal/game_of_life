#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + "/../lib")
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require "curses"
require "game_of_life"

module GameOfLife
  class Screen
    attr_accessor :height, :width, :grid, :banner, :headline, :counter

    def initialize(height, width)
      self.height = height
      self.width = width
      self.grid = Grid.build(height, width) { [DeadCell.new, LiveCell.new].sample }
      self.banner = "-" * width
      self.headline = "Conway's Game Of Life (#{GameOfLife::VERSION}) #{width} X #{height}"
      self.counter = 0
    end

    def run
      curses_setup do
        draw_screen("Press any key to advance simulation")

        loop do
          case Curses.getch
          when "q" then break
          else
            self.counter += 1
            draw_screen(grid.to_s)
            self.grid = Simulation.new.next_grid_generation(grid)
          end
        end
      end
    end

    private

    def curses_setup
      Curses.noecho # do not show typed keys
      Curses.curs_set(0) # do not show cursor
      Curses.init_screen
      begin
        yield
      ensure
        Curses.close_screen
      end
    end

    def write(line, column, text)
      Curses.setpos(line, column)
      Curses.addstr(text)
    end

    def draw_screen(string)
      write(0, 0, banner)
      write(1, 0, headline)
      write(2, 0, banner)
      write(3, 0, string)
      write(height + 3, 0, banner)
      write(height + 4, 0, "Hit q to Quit | #{counter} generations")
      write(height + 5, 0, banner)
    end
  end
end

GameOfLife::Screen.new(40, 40).run
